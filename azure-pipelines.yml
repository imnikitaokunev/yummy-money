# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop
- master

stages:
- stage: Build
  jobs:
  - job: BuildAndPublish
    displayName: 'Build and Publish'
    pool:
      vmImage: ubuntu-latest
    variables:
      buildConfiguration: 'Release'
      solution: '**/*.sln'
      solutionName: 'CostAccounting'
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Restore NuGet packages'
        inputs:
          command: restore
          projects: '$(solution)'

      - task: DotNetCoreCLI@2
        displayName: 'Build Solution'
        inputs:
          command: build
          arguments: '--configuration $(buildConfiguration)'

      - task: Npm@1
        displayName: 'npm installll'
        inputs:
          workingDir: $(solutionName).Web.Angular/ClientApp
          verbose: false

      - task: Npm@1
        displayName: 'npm run build'
        inputs:
          command: custom
          workingDir: $(solutionName).Web.Angular/ClientApp
          verbose: false
          customCommand: 'run build'

      - task: DotNetCoreCLI@2
        displayName: 'Publish Solution'
        inputs:
          command: publish
          publishWebProjects: false
          projects: $(solution)
          arguments: '-c $(BuildConfiguration) -o $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'


- stage: DeployToTesting
  displayName: 'Deploy to Testing'
  dependsOn: 'Build'
  condition: succeeded()
  jobs:
    - deployment: DeployWebApp
      displayName: 'Deploy Web App'
      environment: 'Testing'
      pool:
        vmImage: ubuntu-latest
      strategy:
       runOnce:
        deploy:
          steps:
          - download: current
            displayName: 'Download Artifact'
            artifact: drop
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: yummymoneytesting'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure для учащихся(39113b06-73c7-490e-bb95-f557739f6c3a)'
              appType: 'webAppLinux'
              WebAppName: 'yummymoneytesting'
              packageForLinux: '$(Pipeline.Workspace)/drop/*.zip'
              StartupCommand: 'dotnet CostAccounting.Web.Angular.dll'


- stage: DeployToStaging
  displayName: 'Deploy to Staging'
  dependsOn: 'Build'
  condition: succeeded('Build')
  jobs:
    - deployment: DeployWebApp
      displayName: 'Deploy Web App'
      environment: 'Staging'
      pool:
        vmImage: ubuntu-latest
      strategy:
       runOnce:
        deploy:
          steps:
          - download: current
            displayName: 'Download Artifact'
            artifact: drop
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: yummymoneytesting'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure для учащихся(39113b06-73c7-490e-bb95-f557739f6c3a)'
              appType: 'webAppLinux'
              WebAppName: 'yummymoneytesting'
              packageForLinux: '$(Pipeline.Workspace)/drop/*.zip'
              StartupCommand: 'dotnet CostAccounting.Web.Angular.dll'

